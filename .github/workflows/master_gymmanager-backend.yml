name: Build and deploy Python app to Azure Web App - gymmanager-backend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r backend/requirements.txt  # Install requirements from backend

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip * .[^.]*  # Include dotfiles, skip venv folder
          zip -d release.zip "venv/*"  # Ensure venv is excluded from the zip

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'gymmanager-backend'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}

      # Post-deployment step to run migrations from backend directory
      - name: 'Run migrations on Azure App'
        run: |
          cd backend  # Change to backend directory where manage.py is located
          source ../venv/bin/activate  # Activate the virtual environment
          python manage.py migrate  # Run migrations
        env:
          DJANGO_SETTINGS_MODULE: 'gymmanager.settings'
          DATABASE_URL: ${{ secrets.AZURE_POSTGRES_DB_URL }}  # Ensure DB URL is stored in secrets
